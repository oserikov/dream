{
    "connectors": {},
    "services": {
        "last_chance_service": {
            "connector": {
                "protocol": "python",
                "class_name": "PredefinedTextConnector",
                "response_text": "Sorry, something went wrong inside. Please tell me, what did you say."
            },
            "state_manager_method": "add_bot_utterance_last_chance",
            "tags": [
                "last_chance"
            ],
            "is_enabled": true,
            "source": {
                "component": "components/JC93rfUXvRXa.yml",
                "service": "services/agent_services/service_configs/deepy_base"
            }
        },
        "timeout_service": {
            "connector": {
                "protocol": "python",
                "class_name": "PredefinedTextConnector",
                "response_text": "Sorry, I need to think more on that. Let's talk about something else."
            },
            "state_manager_method": "add_bot_utterance_last_chance",
            "tags": [
                "timeout"
            ],
            "is_enabled": true,
            "source": {
                "component": "components/JqdQTo5rdzNI.yml",
                "service": "services/agent_services/service_configs/deepy_base"
            }
        },
        "annotators": {
            "spelling_preprocessing": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://spelling-preprocessing:8074/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:last_utt_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [],
                "state_manager_method": "add_annotation_and_reset_human_attributes_for_first_turn",
                "is_enabled": true,
                "source": {
                    "component": "components/pGxj32ic41pvquRXUdqc7A.yml",
                    "service": "annotators/spelling_preprocessing/service_configs/spelling-preprocessing"
                }
            }
        },
        "response_annotator_selectors": {
            "connector": {
                "protocol": "python",
                "class_name": "skill_selectors.post_annotator_selector.connector:PostAnnotatorSelectorConnector",
                "annotator_names": [
                    "sentseg"
                ]
            },
            "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
            "tags": [
                "selector"
            ],
            "is_enabled": true,
            "source": {
                "component": "components/LXrJDIf43gwNmPMNXG5Eg.yml",
                "service": "services/response_annotator_selectors/service_configs/agent"
            }
        },
        "response_annotators": {
            "emotion_classification": {
                "connector": {
                    "protocol": "python",
                    "url": "http://emotion-classification-deepy:8015/model",
                    "class_name": "assistant_dists.deepy_base.connectors:BatchConnector"
                },
                "dialog_formatter": "state_formatters.dp_formatters:hypotheses_list",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "skills"
                ],
                "state_manager_method": "add_hypothesis_annotation_batch",
                "is_enabled": true,
                "source": {
                    "component": "components/7dhiDqHqK6TYOAJAKK7grg.yml",
                    "service": "annotators/emotion_classification_deepy/service_configs/emotion-classification-deepy"
                }
            }
        },
        "skill_selectors": {},
        "skills": {
            "harvesters_maintenance_skill": {
                "connector": {
                    "protocol": "http",
                    "url": "http://harvesters-maintenance-skill:3662/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:full_dialog",
                "response_formatter": "state_formatters.dp_formatters:base_skill_formatter",
                "previous_services": [
                    "annotators"
                ],
                "state_manager_method": "add_hypothesis",
                "is_enabled": true,
                "source": {
                    "component": "components/hScAhxQyky9hbpHFZ2bFPg.yml",
                    "service": "skills/harvesters_maintenance_skill_deepy/service_configs/harvesters-maintenance-skill"
                }
            },
            "dff_program_y_skill": {
                "connector": {
                    "protocol": "http",
                    "timeout": 2.0,
                    "url": "http://dff-program-y-skill:8008/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:dff_program_y_skill_formatter",
                "response_formatter": "state_formatters.dp_formatters:skill_with_attributes_formatter_service",
                "previous_services": [
                    "annotators"
                ],
                "state_manager_method": "add_hypothesis",
                "is_enabled": true,
                "source": {
                    "component": "components/ckUclxqUplyzwmnYyixEw.yml",
                    "service": "skills/dff_program_y_skill/service_configs/dff-program-y-skill"
                }
            }
        },
        "candidate_annotators": {},
        "response_selectors": {
            "response_selector": {
                "connector": {
                    "protocol": "http",
                    "url": "http://confidence-based-response-selector:8005/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:full_dialog",
                "response_formatter": "state_formatters.dp_formatters:base_response_selector_formatter_service",
                "previous_services": [
                    "response_annotators"
                ],
                "state_manager_method": "add_bot_utterance",
                "is_enabled": true,
                "source": {
                    "component": "components/KX4drAocVa5APcivWHeBNQ.yml",
                    "service": "response_selectors/confidence_based_response_selector/service_configs/confidence-based-response-selector"
                }
            }
        }
    },
    "metadata": {
        "display_name": "Deepy Base",
        "author": "DeepPavlov",
        "description": "Base version of Lunar assistant. Deepy Base contains Spelling Preprocessing annotator, template-based Harvesters Maintenance Skill, and AIML-based open-domain Program-y Skill based on Dialog Flow Framework.",
        "version": "0.1.0",
        "date_created": "2021-12-12T12:12:00",
        "ram_usage": "50 GB",
        "gpu_usage": "50 GB",
        "disk_usage": "50 GB"
    }
}
{
    "connectors": {
        "sentseg": {
            "protocol": "http",
            "timeout": 1.5,
            "url": "http://sentseg-ru:8011/sentseg"
        },
        "ner": {
            "protocol": "http",
            "timeout": 1.5,
            "url": "http://ner-ru:8021/ner"
        }
    },
    "services": {
        "last_chance_service": {
            "connector": {
                "protocol": "python",
                "class_name": "PredefinedTextConnector",
                "response_text": "Извини, что-то пошло не так в моем мозгу. Пожалуйста, повтори предыдущую реплику.",
                "annotations": {
                    "sentseg": {
                        "punct_sent": "Извини, что-то пошло не так в моем мозгу. Пожалуйста, повтори предыдущую реплику.",
                        "segments": [
                            "Извини, что-то пошло не так в моем мозгу.",
                            "Пожалуйста, повтори предыдущую реплику."
                        ]
                    },
                    "ner": [
                        []
                    ]
                }
            },
            "state_manager_method": "add_bot_utterance_last_chance",
            "tags": [
                "last_chance"
            ],
            "is_enabled": true,
            "source": {
                "component": "components/ofdqbJszMago.yml",
                "service": "services/agent_services/service_configs/dream_russian"
            }
        },
        "timeout_service": {
            "connector": {
                "protocol": "python",
                "class_name": "PredefinedTextConnector",
                "response_text": "Извини, что-то пошло не так в моем мозгу. Пожалуйста, повтори предыдущую реплику.",
                "annotations": {
                    "sentseg": {
                        "punct_sent": "Извини, что-то пошло не так в моем мозгу. Пожалуйста, повтори предыдущую реплику.",
                        "segments": [
                            "Извини, что-то пошло не так в моем мозгу.",
                            "Пожалуйста, повтори предыдущую реплику."
                        ]
                    },
                    "ner": [
                        []
                    ]
                }
            },
            "state_manager_method": "add_bot_utterance_last_chance",
            "tags": [
                "timeout"
            ],
            "is_enabled": true,
            "source": {
                "component": "components/o11NkX9o26nr.yml",
                "service": "services/agent_services/service_configs/dream_russian"
            }
        },
        "annotators": {
            "spelling_preprocessing": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://spelling-preprocessing-ru:8074/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:last_utt_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [],
                "state_manager_method": "add_annotation_and_reset_human_attributes_for_first_turn",
                "is_enabled": true,
                "source": {
                    "component": "components/OOF0PmuxswPuZintDoAlXw.yml",
                    "service": "annotators/spelling_preprocessing_dp/service_configs/spelling-preprocessing-ru"
                }
            },
            "spacy_annotator": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://spacy-annotator-ru:8129/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:last_utt_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "state_manager_method": "add_annotation_and_reset_human_attributes_for_first_turn",
                "is_enabled": true,
                "source": {
                    "component": "components/2U9da1Fyq1KvANddliIN5g.yml",
                    "service": "annotators/spacy_annotator/service_configs/spacy-annotator-ru"
                }
            },
            "sentseg": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.5,
                    "url": "http://sentseg-ru:8011/sentseg"
                },
                "dialog_formatter": "state_formatters.dp_formatters:preproc_last_human_utt_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "annotators.spelling_preprocessing"
                ],
                "state_manager_method": "add_annotation",
                "is_enabled": true,
                "source": {
                    "component": "components/Nw2SnrS4DGoALg6Cu58Zw.yml",
                    "service": "annotators/sentseg_ru/service_configs/sentseg-ru"
                }
            },
            "badlisted_words": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://badlisted-words-ru:8018/badlisted_words"
                },
                "dialog_formatter": "state_formatters.dp_formatters:preproc_and_tokenized_last_human_utt_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "annotators.spelling_preprocessing",
                    "annotators.spacy_annotator"
                ],
                "state_manager_method": "add_annotation",
                "is_enabled": true,
                "source": {
                    "component": "components/WzIX0HJ0Xyo4V8ItwLew.yml",
                    "service": "annotators/BadlistedWordsDetector_ru/service_configs/badlisted-words-ru"
                }
            },
            "toxic_classification": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://toxic-classification-ru:8118/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:preproc_last_human_utt_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "annotators.spelling_preprocessing"
                ],
                "state_manager_method": "add_annotation",
                "is_enabled": true,
                "source": {
                    "component": "components/3DTP1sVdmFIBYrC8OjRYA.yml",
                    "service": "annotators/toxic_classification_ru/service_configs/toxic-classification-ru"
                }
            },
            "intent_catcher": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://intent-catcher-ru:8014/detect"
                },
                "dialog_formatter": "state_formatters.dp_formatters:last_utt_sentseg_segments_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "annotators.spelling_preprocessing",
                    "annotators.sentseg"
                ],
                "state_manager_method": "add_annotation",
                "is_enabled": true,
                "source": {
                    "component": "components/v2RpT5Ryi2ke97ANZxRnJg.yml",
                    "service": "annotators/IntentCatcherTransformers/service_configs/intent-catcher-ru"
                }
            },
            "ner": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.5,
                    "url": "http://ner-ru:8021/ner"
                },
                "dialog_formatter": "state_formatters.dp_formatters:ner_formatter_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "annotators.spelling_preprocessing",
                    "annotators.sentseg"
                ],
                "state_manager_method": "add_annotation",
                "is_enabled": true,
                "source": {
                    "component": "components/Jlk28u7nVCSNqrT1YpLAQ.yml",
                    "service": "annotators/NER_deeppavlov/service_configs/ner-ru"
                }
            },
            "entity_detection": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://entity-detection-ru:8103/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:entity_detection_formatter_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "annotators.spelling_preprocessing",
                    "annotators.sentseg"
                ],
                "state_manager_method": "add_annotation",
                "is_enabled": true,
                "source": {
                    "component": "components/1VPCe8n0dmU8o2hC0NeeWQ.yml",
                    "service": "annotators/entity_detection_rus/service_configs/entity-detection-ru"
                }
            },
            "entity_linking": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://entity-linking-ru:8075/model"
                },
                "dialog_formatter": "state_formatters.dp_formatters:el_formatter_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "annotators.ner",
                    "annotators.entity_detection"
                ],
                "state_manager_method": "add_annotation",
                "is_enabled": true,
                "source": {
                    "component": "components/m30AHfu4VgC51bUU6Jo7A.yml",
                    "service": "annotators/entity_linking_rus/service_configs/entity-linking-ru"
                }
            },
            "fact_retrieval": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://fact-retrieval-ru:8110/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:fact_retrieval_rus_formatter_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "annotators.entity_linking"
                ],
                "state_manager_method": "add_annotation",
                "is_enabled": true,
                "source": {
                    "component": "components/vE3pRKimWyPc5qaeW8Q1Q.yml",
                    "service": "annotators/fact_retrieval_rus/service_configs/fact-retrieval-ru"
                }
            },
            "wiki_parser": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://wiki-parser-ru:8077/model"
                },
                "dialog_formatter": "state_formatters.dp_formatters:wp_formatter_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "required_previous_services": [
                    "annotators.entity_linking"
                ],
                "state_manager_method": "add_annotation",
                "is_enabled": true,
                "source": {
                    "component": "components/feDgqHKLibnMNM3HSbnmA.yml",
                    "service": "annotators/wiki_parser/service_configs/wiki-parser-ru"
                }
            },
            "summarization_annotator": {
                "connector": {
                    "protocol": "http",
                    "timeout": 10.0,
                    "url": "http://summarization-annotator:8058/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:summarization_annotator_formatter",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "annotators.spelling_preprocessing"
                ],
                "state_manager_method": "update_attributes",
                "is_enabled": true,
                "source": {
                    "component": "components/riRfdGz86P51B9bL7fO6JR.yml",
                    "service": "annotators/summarization_annotator/service_configs/summarization-annotator"
                }
            }
        },
        "response_annotators": {
            "sentseg": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.5,
                    "url": "http://sentseg-ru:8011/sentseg"
                },
                "dialog_formatter": "state_formatters.dp_formatters:last_bot_utt_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "response_annotator_selectors"
                ],
                "state_manager_method": "add_annotation_prev_bot_utt",
                "is_enabled": true,
                "source": {
                    "component": "components/4SJxJlf3E8TTM94Uiqt5Xg.yml",
                    "service": "annotators/sentseg_ru/service_configs/sentseg-ru"
                }
            },
            "ner": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.5,
                    "url": "http://ner-ru:8021/ner"
                },
                "dialog_formatter": "state_formatters.dp_formatters:ner_formatter_last_bot_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "response_annotator_selectors",
                    "response_annotators.sentseg"
                ],
                "state_manager_method": "add_annotation_prev_bot_utt",
                "is_enabled": true,
                "source": {
                    "component": "components/Jlk28u7nVCSNqrT1YpLAQ.yml",
                    "service": "annotators/NER_deeppavlov/service_configs/ner-ru"
                }
            }
        },
        "response_annotator_selectors": {
            "connector": {
                "protocol": "python",
                "class_name": "skill_selectors.post_annotator_selector.connector:PostAnnotatorSelectorConnector",
                "annotator_names": [
                    "sentseg",
                    "ner"
                ]
            },
            "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
            "tags": [
                "selector"
            ],
            "is_enabled": true,
            "source": {
                "component": "components/LXrJDIf43gwNmPMNXG5Eg.yml",
                "service": "services/response_annotator_selectors/service_configs/agent"
            }
        },
        "candidate_annotators": {
            "spacy_annotator": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://spacy-annotator-ru:8129/respond_batch"
                },
                "dialog_formatter": "state_formatters.dp_formatters:hypotheses_list",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "skills"
                ],
                "state_manager_method": "add_hypothesis_annotation_batch",
                "is_enabled": true,
                "source": {
                    "component": "components/2U9da1Fyq1KvANddliIN5g.yml",
                    "service": "annotators/spacy_annotator/service_configs/spacy-annotator-ru"
                }
            },
            "badlisted_words": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://badlisted-words-ru:8018/badlisted_words_batch"
                },
                "dialog_formatter": "state_formatters.dp_formatters:hypotheses_list",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "candidate_annotators.spacy_annotator"
                ],
                "state_manager_method": "add_hypothesis_annotation_batch",
                "is_enabled": true,
                "source": {
                    "component": "components/gySZ51dyqYi9TOFr6zY5kA.yml",
                    "service": "annotators/BadlistedWordsDetector_ru/service_configs/badlisted-words-ru"
                }
            },
            "toxic_classification": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://toxic-classification-ru:8118/respond_batch"
                },
                "dialog_formatter": "state_formatters.dp_formatters:hypotheses_list",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "skills"
                ],
                "state_manager_method": "add_hypothesis_annotation_batch",
                "is_enabled": true,
                "source": {
                    "component": "components/3DTP1sVdmFIBYrC8OjRYA.yml",
                    "service": "annotators/toxic_classification_ru/service_configs/toxic-classification-ru"
                }
            },
            "entity_detection": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://entity-detection-ru:8103/respond_batch"
                },
                "dialog_formatter": "state_formatters.dp_formatters:hypotheses_list",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "skills"
                ],
                "state_manager_method": "add_hypothesis_annotation_batch",
                "is_enabled": true,
                "source": {
                    "component": "components/05PqJXVd7gV7DqslN5z3A.yml",
                    "service": "annotators/entity_detection/service_configs/entity-detection-ru"
                }
            },
            "dialogrpt": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://dialogrpt-ru:8122/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:hypotheses_with_context_list",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "skills"
                ],
                "state_manager_method": "add_hypothesis_annotation_batch",
                "is_enabled": true,
                "source": {
                    "component": "components/DUW2u7FwPMyhBOWrK1HTg.yml",
                    "service": "services/dialogrpt_ru/service_configs/dialogrpt-ru"
                }
            }
        },
        "skill_selectors": {
            "rule_based_selector": {
                "connector": {
                    "protocol": "python",
                    "class_name": "skill_selectors.rule_based_selector.connector:RuleBasedSkillSelectorConnector"
                },
                "dialog_formatter": "state_formatters.dp_formatters:base_skill_selector_formatter_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "annotators"
                ],
                "tags": [
                    "selector"
                ],
                "is_enabled": true,
                "source": {
                    "component": "components/xSwFvtAUdvtQosvzpb7oMg.yml",
                    "service": "skill_selectors/rule_based_selector/service_configs/agent"
                }
            }
        },
        "skills": {
            "dff_program_y_skill": {
                "connector": {
                    "protocol": "http",
                    "timeout": 2.0,
                    "url": "http://dff-program-y-ru-skill:8008/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:dff_program_y_skill_formatter",
                "response_formatter": "state_formatters.dp_formatters:skill_with_attributes_formatter_service",
                "previous_services": [
                    "skill_selectors"
                ],
                "state_manager_method": "add_hypothesis",
                "is_enabled": true,
                "source": {
                    "component": "components/rJL2LobMLcELiot0Fy9w.yml",
                    "service": "skills/dff_program_y_skill/service_configs/dff-program-y-ru-skill"
                }
            },
            "dff_intent_responder_skill": {
                "connector": {
                    "protocol": "http",
                    "timeout": 2.0,
                    "url": "http://dff-intent-responder-ru-skill:8012/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:dff_intent_responder_skill_formatter",
                "response_formatter": "state_formatters.dp_formatters:skill_with_attributes_formatter_service",
                "previous_services": [
                    "skill_selectors"
                ],
                "state_manager_method": "add_hypothesis",
                "is_enabled": true,
                "source": {
                    "component": "components/qJPPqfjKviUyvDTCn2Xw.yml",
                    "service": "skills/dff_intent_responder_skill/service_configs/dff-intent-responder-ru-skill"
                }
            },
            "dummy_skill": {
                "connector": {
                    "protocol": "python",
                    "class_name": "skills.dummy_skill.connector:DummySkillConnector"
                },
                "dialog_formatter": "state_formatters.dp_formatters:utt_sentrewrite_modified_last_dialog",
                "response_formatter": "state_formatters.dp_formatters:skill_with_attributes_formatter_service",
                "previous_services": [
                    "skill_selectors"
                ],
                "state_manager_method": "add_hypothesis",
                "is_enabled": true,
                "source": {
                    "component": "components/uYkoK0vRp4bbIg9akI1yw.yml",
                    "service": "skills/dummy_skill/service_configs/agent"
                }
            },
            "personal_info_skill": {
                "connector": {
                    "protocol": "http",
                    "timeout": 2.0,
                    "url": "http://personal-info-ru-skill:8030/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:utt_sentseg_punct_dialog",
                "response_formatter": "state_formatters.dp_formatters:skill_with_attributes_formatter_service",
                "previous_services": [
                    "skill_selectors"
                ],
                "state_manager_method": "add_hypothesis",
                "is_enabled": true,
                "source": {
                    "component": "components/RJuoKZw7krAuB4LrP5fQ.yml",
                    "service": "skills/personal_info_skill/service_configs/personal-info-ru-skill"
                }
            },
            "dff_friendship_skill": {
                "connector": {
                    "protocol": "http",
                    "timeout": 2.0,
                    "url": "http://dff-friendship-ru-skill:8086/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:dff_friendship_skill_formatter",
                "response_formatter": "state_formatters.dp_formatters:skill_with_attributes_formatter_service",
                "previous_services": [
                    "skill_selectors"
                ],
                "state_manager_method": "add_hypothesis",
                "is_enabled": true,
                "source": {
                    "component": "components/cyCwlcQF9mAtDNcxOS6CA.yml",
                    "service": "skills/dff_friendship_skill/service_configs/dff-friendship-ru-skill"
                }
            },
            "dff_generative_skill": {
                "connector": {
                    "protocol": "http",
                    "timeout": 4.0,
                    "url": "http://dff-generative-ru-skill:8092/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:dff_generative_skill_formatter",
                "response_formatter": "state_formatters.dp_formatters:skill_with_attributes_formatter_service",
                "previous_services": [
                    "skill_selectors"
                ],
                "state_manager_method": "add_hypothesis",
                "is_enabled": true,
                "source": {
                    "component": "components/FJpakzPR4IC8F1sos7FSg.yml",
                    "service": "skills/dff_generative_skill/service_configs/dff-generative-ru-skill"
                }
            },
            "dff_template_skill": {
                "connector": {
                    "protocol": "http",
                    "timeout": 2.0,
                    "url": "http://dff-template-skill:8120/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:dff_template_skill_formatter",
                "response_formatter": "state_formatters.dp_formatters:skill_with_attributes_formatter_service",
                "previous_services": [
                    "skill_selectors"
                ],
                "state_manager_method": "add_hypothesis",
                "is_enabled": true,
                "source": {
                    "component": "components/pC342KBWtheQNnXjIni6A.yml",
                    "service": "skills/dff_template_skill/service_configs/dff-template-skill"
                }
            },
            "text_qa": {
                "connector": {
                    "protocol": "http",
                    "timeout": 2.0,
                    "url": "http://text-qa-ru:8078/model"
                },
                "dialog_formatter": "state_formatters.dp_formatters:utt_sentseg_punct_dialog",
                "response_formatter": "state_formatters.dp_formatters:skill_with_attributes_formatter_service",
                "previous_services": [
                    "skill_selectors"
                ],
                "state_manager_method": "add_hypothesis",
                "is_enabled": true,
                "source": {
                    "component": "components/mtdRL2FMMYwzdfEeRtVmug.yml",
                    "service": "services/text_qa/service_configs/text-qa-ru"
                }
            }
        },
        "response_selectors": {
            "response_selector": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://convers-evaluation-selector-ru:8009/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:full_history_dialog",
                "response_formatter": "state_formatters.dp_formatters:base_response_selector_formatter_service",
                "previous_services": [
                    "candidate_annotators"
                ],
                "state_manager_method": "add_bot_utterance",
                "is_enabled": true,
                "source": {
                    "component": "components/SFiPofc4cGq6IRlit38e8A.yml",
                    "service": "response_selectors/convers_evaluation_based_selector/service_configs/convers-evaluation-selector-ru"
                }
            }
        }
    },
    "metadata": {
        "display_name": "Dream Russian",
        "author": "DeepPavlov",
        "description": "Russian version of DeepPavlov Dream Socialbot. This is a generative-based socialbot that uses Russian DialoGPT by DeepPavlov to generate most of the responses. It also contains intent catcher and responder components to cover special user requests.",
        "version": "0.1.0",
        "date_created": "2022-12-12T12:12:00",
        "ram_usage": "50 GB",
        "gpu_usage": "50 GB",
        "disk_usage": "50 GB"
    }
}
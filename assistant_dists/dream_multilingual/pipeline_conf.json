{
    "services": {
        "last_chance_service": {
            "connector": {
                "protocol": "python",
                "class_name": "PredefinedTextConnector",
                "response_text": "Sorry, something went wrong inside. Please tell me, what did you say.",
                "annotations": {
                    "sentseg": {
                        "punct_sent": "Sorry, something went wrong inside. Please tell me, what did you say.",
                        "segments": [
                            "Sorry, something went wrong inside.",
                            "Please tell me, what did you say."
                        ]
                    }
                }
            },
            "state_manager_method": "add_bot_utterance_last_chance",
            "tags": [
                "last_chance"
            ],
            "source": {
                "component": "components/TvtHFEgVjuut.yml",
                "service": "services/agent_services/service_configs/dream_multilingual"
            }
        },
        "timeout_service": {
            "connector": {
                "protocol": "python",
                "class_name": "PredefinedTextConnector",
                "response_text": "Sorry, I need to think more on that. Let's talk about something else.",
                "annotations": {
                    "sentseg": {
                        "punct_sent": "Sorry, I need to think more on that. Let's talk about something else.",
                        "segments": [
                            "Sorry, I need to think more on that.",
                            "Let's talk about something else."
                        ]
                    }
                }
            },
            "state_manager_method": "add_bot_utterance_last_chance",
            "tags": [
                "timeout"
            ],
            "source": {
                "component": "components/HvYsrVCd5c52.yml",
                "service": "services/agent_services/service_configs/dream_multilingual"
            }
        },
        "annotators": {
            "toxic_classification": {
                "connector": {
                    "protocol": "http",
                    "timeout": 2.0,
                    "url": "http://toxic-classification-multilingual:8013/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:preproc_last_human_utt_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [],
                "state_manager_method": "add_annotation",
                "is_enabled": true,
                "source": {
                    "component": "components/XE0P0D9hrEvJAu4a8QRw.yml",
                    "service": "annotators/MultilingualToxicClassification/service_configs/toxic-classification-multilingual"
                }
            },
            "sentiment_classification": {
                "connector": {
                    "protocol": "http",
                    "timeout": 2.0,
                    "url": "http://sentiment-classification-multilingual:8024/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:preproc_last_human_utt_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "state_manager_method": "add_annotation",
                "is_enabled": true,
                "source": {
                    "component": "components/ci8xMlIVkTwcjOOQ5ztZ2g.yml",
                    "service": "annotators/MultilingualSentimentClassification/service_configs/sentiment-classification-multilingual"
                }
            }
        },
        "candidate_annotators": {
            "sentence_ranker": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://sentence-ranker-multilingual:8128/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:sentence_ranker_formatter",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "skills"
                ],
                "state_manager_method": "add_hypothesis_annotation_batch",
                "is_enabled": true,
                "source": {
                    "component": "components/HFemvyS0tyqChUVAuCZt7g.yml",
                    "service": "services/sentence_ranker/service_configs/sentence-ranker-multilingual"
                }
            },
            "toxic_classification": {
                "connector": {
                    "protocol": "http",
                    "timeout": 2.0,
                    "url": "http://toxic-classification-multilingual:8013/respond_batch"
                },
                "dialog_formatter": "state_formatters.dp_formatters:hypotheses_list",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "skills"
                ],
                "state_manager_method": "add_hypothesis_annotation_batch",
                "is_enabled": true,
                "source": {
                    "component": "components/XE0P0D9hrEvJAu4a8QRw.yml",
                    "service": "annotators/MultilingualToxicClassification/service_configs/toxic-classification-multilingual"
                }
            },
            "sentiment_classification": {
                "connector": {
                    "protocol": "http",
                    "timeout": 2.0,
                    "url": "http://sentiment-classification-multilingual:8024/respond_batch"
                },
                "dialog_formatter": "state_formatters.dp_formatters:hypotheses_list",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "skills"
                ],
                "state_manager_method": "add_hypothesis_annotation_batch",
                "is_enabled": true,
                "source": {
                    "component": "components/ci8xMlIVkTwcjOOQ5ztZ2g.yml",
                    "service": "annotators/MultilingualSentimentClassification/service_configs/sentiment-classification-multilingual"
                }
            }
        },
        "skill_selectors": {
            "rule_based_selector": {
                "connector": {
                    "protocol": "python",
                    "class_name": "skill_selectors.rule_based_selector.connector:RuleBasedSkillSelectorConnector"
                },
                "dialog_formatter": "state_formatters.dp_formatters:base_skill_selector_formatter_dialog",
                "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
                "previous_services": [
                    "annotators"
                ],
                "tags": [
                    "selector"
                ],
                "is_enabled": true,
                "source": {
                    "component": "components/xSwFvtAUdvtQosvzpb7oMg.yml",
                    "service": "skill_selectors/rule_based_selector/service_configs/agent"
                }
            }
        },
        "skills": {
            "gpt2_generator": {
                "connector": {
                    "protocol": "http",
                    "timeout": 5.0,
                    "url": "http://gpt2-multilingual:8132/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:last_utt_and_history_dialog",
                "response_formatter": "state_formatters.dp_formatters:skill_with_attributes_formatter_service",
                "previous_services": [
                    "skill_selectors"
                ],
                "state_manager_method": "add_hypothesis",
                "is_enabled": true,
                "source": {
                    "component": "components/XgWzjx4qHTsfx1ijyDcsw.yml",
                    "service": "services/gpt2_generator/service_configs/gpt2-multilingual"
                }
            }
        },
        "response_selectors": {
            "response_selector": {
                "connector": {
                    "protocol": "http",
                    "timeout": 1.0,
                    "url": "http://convers-evaluation-selector:8009/respond"
                },
                "dialog_formatter": "state_formatters.dp_formatters:full_history_dialog",
                "response_formatter": "state_formatters.dp_formatters:base_response_selector_formatter_service",
                "previous_services": [
                    "candidate_annotators"
                ],
                "state_manager_method": "add_bot_utterance",
                "is_enabled": true,
                "source": {
                    "component": "components/ly2AVNtIcJpTWz1qJ1mvKQ.yml",
                    "service": "response_selectors/convers_evaluation_based_selector/service_configs/convers-evaluation-selector"
                }
            }
        },
        "response_annotator_selectors": {
            "connector": {
                "protocol": "python",
                "class_name": "skill_selectors.post_annotator_selector.connector:PostAnnotatorSelectorConnector",
                "annotator_names": [
                    "sentseg"
                ]
            },
            "response_formatter": "state_formatters.dp_formatters:simple_formatter_service",
            "tags": [
                "selector"
            ],
            "is_enabled": true,
            "source": {
                "component": "components/LXrJDIf43gwNmPMNXG5Eg.yml",
                "service": "services/response_annotator_selectors/service_configs/agent"
            }
        },
        "response_annotators": {}
    },
    "metadata": {
        "display_name": "Dream Multilingual",
        "author": "DeepPavlov",
        "description": "Multilingual version of DeepPavlov Dream Socialbot.",
        "version": "0.1.0",
        "date_created": "2022-12-12T12:12:00",
        "ram_usage": "50 GB",
        "gpu_usage": "50 GB",
        "disk_usage": "50 GB"
    }
}